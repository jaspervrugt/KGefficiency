%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 
%% Vrugt, J.A. and de Oliveira, D.Y., 2022. Confidence intervals of the
%%  Kling-Gupta efficiency, Journal of Hydrology, 612, 
%%  10.1016/j.jhydrol.2022.127968
%% https://doi.org/10.1016/j.jhydrol.2022.127968
%%
%% Plot Figure 11 of paper
%% 
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Open figure
fig_name = ['Fig: Results of: (I) Least squares, (II) bootstrap ' ...
    '(III) gridding and (IV) DREAM'];
figure('unit','inches','name',fig_name,'PaperOrientation','portrait', ...
    'position',[0.1 0.1 13 10.2]);
%% Define some default variables/settings
xmin = 0.975; xmax = 1.02; ymin = 1.4; ymax = 2.5;
m1 = 6; m2 = 6;
color_in = [ 0.3 0.3 0.3; 0.5 0.5 0.5 ; 0.7 0.7 0.7; 0.9 0.9 0.9]; 
unif_intervals = [16 64 207]/255;
linewdth_intervals = 0.5; linewdth_intervals2 = 2;
linewdth_type = '--';
fontsize_labels = 22; 
fontsize_axis = 18; 
fontsize_percentiles = 18; 
fontsize_ctlabels = 15; 

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Fig. 1A Analytic results: Confidence region (via F-distribution)
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax1 = axes('units','inches'); 
axpos = [ 1.5 5.65 4.5 4.5 ]; 
set(ax1,'position',axpos);
ellipse(ax1,semimajor_axisT, semiminor_axisT,pi+phiT,X0T,Y0T,[],[], ...
    color_in(1:n_gam,1:3)); hold on
[cc,hh] = contour(ax1,b(1,1:M),b(2,1:M),SSR,15,'linewidth',0.5);
clabel(cc,hh,'LabelSpacing',300,'Color','k','fontsize',fontsize_ctlabels); 
hh.LevelList = [50 52 55 60 70 80 100 125 150 200]; colormap(copper)
%% Now add univariate intervals - gamma % (95%)
dyp = 0.10;
% horizontal lines: start
line(ax1,[xmin xmin + 0.03*(xmax-xmin)],[ls_95(2,1) ls_95(2,1)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax1,[xmin xmin + 0.03*(xmax-xmin)],[ls_95(2,2) ls_95(2,2)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
text(ax1,xmin+0.035*(xmax-xmin),ls_95(2,1)-6*0.0004,'${\rm 2.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
text(ax1,xmin+0.035*(xmax-xmin),ls_95(2,2)-6*0.0004,'${\rm 97.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
% horizontal lines: end
line(ax1,[ls_95(1,1) ls_95(1,2)],[ls_95(2,1) ls_95(2,1)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax1,[ls_95(1,1) ls_95(1,2)],[ls_95(2,2) ls_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% vertical lines: start
line(ax1,[ls_95(1,1) ls_95(1,1)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax1,[ls_95(1,2) ls_95(1,2)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
hp = text(ax1,ls_95(1,1)+0.0002,ymin+0.035*(ymax-ymin),'${\rm 2.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
set(hp,'rotation',90);
hp = text(ax1,ls_95(1,2)+0.0002,ymin+0.035*(ymax-ymin),'${\rm 97.5\%}$',...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
set(hp,'rotation',90);
% vertical lines: end
line(ax1,[ls_95(1,1) ls_95(1,1)],[ls_95(2,1) ls_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax1,[ls_95(1,2) ls_95(1,2)],[ls_95(2,1) ls_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% optimum solution
line(ax1,[xmin c_ls(1)],[c_ls(2) c_ls(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
line(ax1,[c_ls(1) c_ls(1)],[ymin c_ls(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
axis(ax1,[xmin xmax ymin ymax]);
xloc = 0.98:0.01:1.02; 
yloc = 1.4:0.2:2.5;
set(ax1,'xtick',xloc,'xticklabel',xloc); xtickformat(ax1,'%3.2f');
xtick = get(ax1,'xtick'); xticklabel = get(ax1,'xticklabel'); 
set(ax1,'xticklabel',[]);
% now plot manually - for all except 12
dy = ymin - 0.045*(ymax-ymin);
set(ax1,'ytick',yloc,'yticklabel',yloc); ytickformat(ax1,'%3.2f');
% Now create minor ticks - y axis
xminortick = 0.976:0.002:1.02; 
xminortick = xminortick(~ismember(xminortick,xloc));
ax1.XAxis.MinorTickValues = xminortick;
yminortick = 1.4:0.05:2.5; 
yminortick = yminortick(~ismember(yminortick,yloc));
ax1.YAxis.MinorTickValues = yminortick;

% plot optimum solution
plot(ax1,c_ls(1),c_ls(1),'rx','linewidth',2,'color','r','markersize',15);
% Add labels
ylabel(ax1,'$b,\;{\rm intercept}$','interpreter',...
    'latex','fontsize',fontsize_labels+2,'Units','normalized','Position',...
    [-0.19, 0.5, 0],'fontweight','normal');
% add figure label
text(ax1,xmin+0.016*(xmax-xmin),ymin+0.95*(ymax-ymin),'(A)', ...
    'fontsize',fontsize_labels);
% adjust figure
pos = get(ax1, 'Position');
offset = 0.1;
set(ax1, ...
    'Box'         , 'on'                            , ...
    'TickDir'     , 'out'                           , ...
    'XMinorTick'  , 'on'                            , ...
    'YMinorTick'  , 'on'                            , ...
    'TickLength'  , [.02 .02]                       , ...
    'LineWidth'   , 1.25                            , ...
    'FontSize'    , fontsize_axis                   , ...
    'Position'    , pos + [0, offset, 0, -offset]);
% set box property to off and remove background color
set(ax1,'box','off','color','none')
% create new, empty axes with box but without ticks
h2 = axes('Position',get(ax1,'Position'),'box','on','xtick',[],'ytick',[]);
% set original axes as active
linkaxes([ax1 h2]);
% define right and top line
line(ax1,[xmax xmax],[ymin ymax],'color','k','linewidth',1);
line(ax1,[xmin xmax],[ymax ymax],'color','k','linewidth',1);
axis(ax1,[xmin xmax ymin ymax]);
plot(ax1,c_ls(1),c_ls(2),'rx','linewidth',2,'color','r','markersize',15);
% background white
set(ax1,'color','w');

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Fig. 1B Numerical results: Bootstrap method
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax2 = axes('units','inches'); 
axpos = [ 6.55 5.65 4.5 4.5 ]; 
set(ax2,'position',axpos);
% Now loop all bootstrap samples per confidence level
b1 = Bopt(1:N,1); b2 = Bopt(1:N,2);
% 99% interval
plot(ax2,b1(bs_99id,1),b2(bs_99id,1),'ro','markerfacecolor', ...
    color_in(1,1:3),'color',color_in(1,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 95% interval
plot(ax2,b1(bs_95id,1),b2(bs_95id,1),'ro','markerfacecolor', ...
    color_in(2,1:3),'color',color_in(2,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 90% interval
plot(ax2,b1(bs_90id,1),b2(bs_90id,1),'ro','markerfacecolor', ...
    color_in(3,1:3),'color',color_in(3,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 50% interval
plot(ax2,b1(bs_50id,1),b2(bs_50id,1),'ro','markerfacecolor', ...
    color_in(4,1:3),'color',color_in(4,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% define axes
axis(ax2,[xmin xmax ymin ymax]);
set(ax2,'xtick',xloc,'xticklabel',xloc); set(ax2,'xticklabel',[]);
set(ax2,'ytick',yloc,'yticklabel',[]);
% Now create minor ticks - y axis
ax2.XAxis.MinorTickValues = xminortick; 
ax2.YAxis.MinorTickValues = yminortick;

% plot optimum solution
plot(ax2,c_ls(1),c_ls(1),'rx','linewidth',2,'color','r','markersize',15);
% Now add univariate intervals - gamma % (95%)
dyp = 0.10;
% horizontal lines: start
line(ax2,[xmin xmin + 0.03*(xmax-xmin)],[bs_95(2,1) bs_95(2,1)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax2,[xmin xmin + 0.03*(xmax-xmin)],[bs_95(2,2) bs_95(2,2)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
text(ax2,xmin+0.035*(xmax-xmin),bs_95(2,1)-6*0.0004,'${\rm 2.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
text(ax2,xmin+0.035*(xmax-xmin),bs_95(2,2)-6*0.0004,'${\rm 97.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
% horizontal lines: end
line(ax2,[bs_95(1,1) bs_95(1,2)],[bs_95(2,1) bs_95(2,1)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax2,[bs_95(1,1) bs_95(1,2)],[bs_95(2,2) bs_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% vertical lines: start
line(ax2,[bs_95(1,1) bs_95(1,1)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax2,[bs_95(1,2) bs_95(1,2)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
hp = text(ax2,bs_95(1,1)+0.0002,ymin+0.035*(ymax-ymin),'${\rm 2.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
set(hp,'rotation',90);
hp = text(ax2,bs_95(1,2)+0.0002,ymin+0.035*(ymax-ymin),'${\rm 97.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment','left','color',unif_intervals);
set(hp,'rotation',90);
% vertical lines: end
line(ax2,[bs_95(1,1) bs_95(1,1)],[bs_95(2,1) bs_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax2,[bs_95(1,2) bs_95(1,2)],[bs_95(2,1) bs_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% optimum solution - red dashed lines
line(ax2,[xmin c_ls(1)],[c_ls(2) c_ls(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
line(ax2,[c_ls(1) c_ls(1)],[ymin c_ls(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
text(ax2,xmin+0.016*(xmax-xmin),ymin+0.95*(ymax-ymin),'(B)', ...
    'fontsize',fontsize_labels);
% adjust figure
pos = get(ax2, 'Position');
offset = 0.1;
set(ax2, ...
    'Box'         , 'on'                            , ...
    'TickDir'     , 'out'                           , ...
    'XMinorTick'  , 'on'                            , ...
    'YMinorTick'  , 'on'                            , ...
    'TickLength'  , [.02 .02]                       , ...
    'LineWidth'   , 1.25                            , ...
    'FontSize'    , fontsize_axis                   , ...
    'Position'    , pos + [0, offset, 0, -offset]);
% set box property to off and remove background color
set(ax2,'box','off','color','none')
% create new, empty axes with box but without ticks
h2 = axes('Position',get(ax2,'Position'),'box','on','xtick',[],'ytick',[]);
% set original axes as active
linkaxes([ax2 h2]);
line(ax2,[xmax xmax],[ymin ymax],'color','k','linewidth',1);
line(ax2,[xmin xmax],[ymax ymax],'color','k','linewidth',1);
axis(ax2,[xmin xmax ymin ymax]);
plot(ax2,c_ls(1),c_ls(2),'rx','linewidth',2,'color','r','markersize',15);
% background white
set(ax2,'color','w'); set(gcf,'color','w');

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Fig. 1C: Objective function gridding
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax3 = axes('units','inches'); 
axpos = [ 1.5 0.7 4.5 4.5 ]; 
set(ax3,'position',axpos);
% Now loop all bootstrap samples per confidence level
b1 = G(1:M^2,1); b2 = G(1:M^2,2);
% 99% interval
plot(ax3,b1(gr_99id,1),b2(gr_99id,1),'ro','markerfacecolor', ...
    color_in(1,1:3),'color',color_in(1,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 95% interval
plot(ax3,b1(gr_95id,1),b2(gr_95id,1),'ro','markerfacecolor', ...
    color_in(2,1:3),'color',color_in(2,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 90% interval
plot(ax3,b1(gr_90id,1),b2(gr_90id,1),'ro','markerfacecolor', ...
    color_in(3,1:3),'color',color_in(3,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 50% interval
plot(ax3,b1(gr_50id,1),b2(gr_50id,1),'ro','markerfacecolor', ...
    color_in(4,1:3),'color',color_in(4,1:3),'markersize',3, ...
    'linewidth',eps); hold on
%% Now add univariate intervals - gamma % (95%)
dyp = 0.10;
% horizontal lines: start
line(ax3,[xmin xmin + 0.03*(xmax-xmin)],[ls_95(2,1) ls_95(2,1)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax3,[xmin xmin + 0.03*(xmax-xmin)],[ls_95(2,2) ls_95(2,2)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
text(ax3,xmin+0.035*(xmax-xmin),ls_95(2,1)-6*0.0004,'${\rm 2.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
text(ax3,xmin+0.035*(xmax-xmin),ls_95(2,2)-6*0.0004,'${\rm 97.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
% horizontal lines: end
line(ax3,[ls_95(1,1) ls_95(1,2)],[ls_95(2,1) ls_95(2,1)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax3,[ls_95(1,1) ls_95(1,2)],[ls_95(2,2) ls_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% vertical lines: start
line(ax3,[ls_95(1,1) ls_95(1,1)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax3,[ls_95(1,2) ls_95(1,2)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
hp = text(ax3,ls_95(1,1)+0.0002,ymin+0.035*(ymax-ymin),'${\rm 2.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
set(hp,'rotation',90);
hp = text(ax3,ls_95(1,2)+0.0002,ymin+0.035*(ymax-ymin),...
    '${\rm 97.5\%}$','interpreter','latex','fontsize',...
    fontsize_percentiles,'HorizontalAlignment', 'left',...
    'color',unif_intervals);
set(hp,'rotation',90);
% vertical lines: end
line(ax3,[ls_95(1,1) ls_95(1,1)],[ls_95(2,1) ls_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax3,[ls_95(1,2) ls_95(1,2)],[ls_95(2,1) ls_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% optimum solution
line(ax3,[xmin c_ls(1)],[c_ls(2) c_ls(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
line(ax3,[c_ls(1) c_ls(1)],[ymin c_ls(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
axis(ax3,[xmin xmax ymin ymax]);
set(ax3,'xtick',xloc,'xticklabel',xloc); set(ax3,'xticklabel',[]);
% now plot manually - for all except 12
dy = ymin - 0.065*(ymax-ymin);
for rr = 1:numel(xtick)
    text(ax3,xtick(rr),dy,xticklabel(rr),'fontsize',fontsize_axis, ...
        'HorizontalAlignment', 'center');
end
set(ax3,'ytick',yloc,'yticklabel',yloc); ytickformat(ax3,'%3.2f');
% Now create minor ticks - y axis
ax3.XAxis.MinorTickValues = xminortick;
ax3.YAxis.MinorTickValues = yminortick;
% plot optimum solution
plot(ax3,c_ls(1),c_ls(2),'rx','linewidth',2,'color','r','markersize',15);
% Add labels
xlabel(ax3,'$a,\;{\rm slope}$','interpreter',...
    'latex','fontsize',fontsize_labels+2,'Units','normalized', ...
    'Position',[0.5, -0.1, 0],'fontweight','normal');
ylabel(ax3,'$b,\;{\rm intercept}$','interpreter',...
    'latex','fontsize',fontsize_labels+2,'Units','normalized', ...
    'Position',[-0.19, 0.5, 0],'fontweight','normal');
% add figure label
text(ax3,xmin+0.016*(xmax-xmin),ymin+0.95*(ymax-ymin),'(C)', ...
    'fontsize',fontsize_labels);
% adjust figure
pos = get(ax3, 'Position');
offset = 0.1;
set(ax3, ...
    'Box'         , 'on'                            , ...
    'TickDir'     , 'out'                           , ...
    'XMinorTick'  , 'on'                            , ...
    'YMinorTick'  , 'on'                            , ...
    'TickLength'  , [.02 .02]                       , ...
    'LineWidth'   , 1.25                            , ...
    'FontSize'    , fontsize_axis                   , ...
    'Position'    , pos + [0, offset, 0, -offset]);
% set box property to off and remove background color
set(ax3,'box','off','color','none')
% create new, empty axes with box but without ticks
h3 = axes('Position',get(ax3,'Position'),'box','on','xtick',[],'ytick',[]);
% set original axes as active
linkaxes([ax3 h3]);
% define right and top line
line(ax3,[xmax xmax],[ymin ymax],'color','k','linewidth',1);
line(ax3,[xmin xmax],[ymax ymax],'color','k','linewidth',1);
% background white
set(ax3,'color','w');
axis(ax3,[xmin xmax ymin ymax]);

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Fig. 1D: DREAM sampled values
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax4 = axes('units','inches');
axpos = [ 6.55 0.7 4.5 4.5 ]; 
set(ax4,'position',axpos);
% Load DREAM results (need to rerun DREAM if generating new data)
load DREAM_res
Pars = genparset(chain); 
idx = find(Pars(:,end) == max(Pars(:,end))); c_dr = Pars(idx(1),1:p+1)';
s2_eps_dr = c_dr(3)^2;
Pars = Pars(end-99999:end,1:end); Nd = size(Pars,1); 
SSR_DREAM = nan(Nd,1);
for i = 1:Nd
    resd = y_meas - f(t,Pars(i,1:p));
%    SSR_DREAM(i,1) = resd'*Vi*resd/s2_eps; 
    SSR_DREAM(i,1) = resd'*Vi*resd/s2_eps_dr; 
end 
% Linear relationship between SSR_DREAM and log-likelihood in last column Pars
dr_95 = nan(p,2);                % Now get 95% pertaining to sigma^2 of data
id_lu = round([0.025 0.975]*Nd); % 2.5 and 97.5 percentile
for j = 1:p
    a = sort(Pars(1:Nd,j)); dr_95(j,1:2) = [a(id_lu(1)) a(id_lu(2))];
end
PD = [ Pars(:,1:p+1) SSR_DREAM ];   
PD = sortrows(PD,p+2);            % sort in order of ascending SSR
id_up = round(gam*Nd);            % gamma
% Now find which ones satisfy the threshold
dream_50id = 1:id_up(4);
dream_90id = id_up(4)+1:id_up(3); % no double plotting of points
dream_95id = id_up(3)+1:id_up(2); % no double plotting of points
dream_99id = id_up(2)+1:id_up(1); % no double plotting of points
b1 = PD(1:Nd,1); b2 = PD(1:Nd,2);   
% 99% interval
plot(ax4,b1(dream_99id,1),b2(dream_99id,1),'ro','markerfacecolor', ...
    color_in(1,1:3),'color',color_in(1,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 95% interval
plot(ax4,b1(dream_95id,1),b2(dream_95id,1),'ro','markerfacecolor', ...
    color_in(2,1:3),'color',color_in(2,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 90% interval
plot(ax4,b1(dream_90id,1),b2(dream_90id,1),'ro','markerfacecolor', ...
    color_in(3,1:3),'color',color_in(3,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 50% interval
plot(ax4,b1(dream_50id,1),b2(dream_50id,1),'ro','markerfacecolor', ...
    color_in(4,1:3),'color',color_in(4,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% define axes
axis(ax4,[xmin xmax ymin ymax]);
set(ax4,'xtick',xloc,'xticklabel',xloc); set(ax4,'xticklabel',[]);
% now plot manually - for all except 12
dy = ymin - 0.065*(ymax-ymin);
for rr = 1:numel(xtick)
    text(ax4,xtick(rr),dy,xticklabel(rr),'fontsize',fontsize_axis, ...
        'HorizontalAlignment', 'center');
end
set(ax4,'ytick',yloc,'yticklabel',[]);
% Now create minor ticks - y axis
ax4.XAxis.MinorTickValues = xminortick; 
ax4.YAxis.MinorTickValues = yminortick;

dyp = 0.10;
% horizontal lines: start
line(ax4,[xmin xmin + 0.03*(xmax-xmin)],[dr_95(2,1) dr_95(2,1)], ...
    'linestyle','-','linewidth',linewdth_intervals2, ...
    'color',unif_intervals);
line(ax4,[xmin xmin + 0.03*(xmax-xmin)],[dr_95(2,2) dr_95(2,2)], ...
    'linestyle','-','linewidth',linewdth_intervals2, ...
    'color',unif_intervals);
% add text about percentiles
text(ax4,xmin+0.035*(xmax-xmin),dr_95(2,1)-6*0.0004,'${\rm 2.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
text(ax4,xmin+0.035*(xmax-xmin),dr_95(2,2)-6*0.0004,'${\rm 97.5\%}$', ...
    'interpreter','latex','fontsize',fontsize_percentiles, ...
    'HorizontalAlignment', 'left','color',unif_intervals);
% horizontal lines: end
line(ax4,[dr_95(1,1) dr_95(1,2)],[dr_95(2,1) dr_95(2,1)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax4,[dr_95(1,1) dr_95(1,2)],[dr_95(2,2) dr_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% vertical lines: start
line(ax4,[dr_95(1,1) dr_95(1,1)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2, ...
    'color',unif_intervals);
line(ax4,[dr_95(1,2) dr_95(1,2)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2, ...
    'color',unif_intervals);
% add text about percentiles
hp = text(ax4,dr_95(1,1)+0.0002,ymin+0.035*(ymax-ymin), ...
    '${\rm 2.5\%}$','interpreter','latex','fontsize',...
    fontsize_percentiles,'HorizontalAlignment', 'left', ...
    'color',unif_intervals);
set(hp,'rotation',90);
hp = text(ax4,dr_95(1,2)+0.0002,ymin+0.035*(ymax-ymin), ...
    '${\rm 97.5\%}$','interpreter','latex','fontsize',...
    fontsize_percentiles,'HorizontalAlignment', 'left', ...
    'color',unif_intervals);
set(hp,'rotation',90);
% vertical lines: end
line(ax4,[dr_95(1,1) dr_95(1,1)],[dr_95(2,1) dr_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax4,[dr_95(1,2) dr_95(1,2)],[dr_95(2,1) dr_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% optimum solution - red dashed lines
line(ax4,[xmin c_dr(1)],[c_dr(2) c_dr(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
line(ax4,[c_dr(1) c_dr(1)],[ymin c_dr(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
xlabel(ax4,'$a,\;{\rm slope}$','interpreter',...
    'latex','fontsize',fontsize_labels+2,'Units','normalized', ...
    'Position',[0.5, -0.1, 0],'fontweight','normal');
% add figure label
text(ax4,xmin+0.016*(xmax-xmin),ymin+0.95*(ymax-ymin),'(D)', ...
    'fontsize',fontsize_labels);
% adjust figure
pos = get(ax4, 'Position');
offset = 0.1;
set(ax4, ...
    'Box'         , 'on'                            , ...
    'TickDir'     , 'out'                           , ...
    'XMinorTick'  , 'on'                            , ...
    'YMinorTick'  , 'on'                            , ...
    'TickLength'  , [.02 .02]                       , ...
    'LineWidth'   , 1.25                            , ...
    'FontSize'    , fontsize_axis                   , ...
    'Position'    , pos + [0, offset, 0, -offset]);
% set box property to off and remove background color
set(ax4,'box','off','color','none')
% create new, empty axes with box but without ticks
h4 = axes('Position',get(ax4,'Position'),'box','on','xtick',[],'ytick',[]);
% set original axes as active
linkaxes([ax4 h4]);
line(ax4,[xmax xmax],[ymin ymax],'color','k','linewidth',1);
line(ax4,[xmin xmax],[ymax ymax],'color','k','linewidth',1);
axis(ax4,[xmin xmax ymin ymax]);
% plot optimum solution
plot(ax4,c_dr(1),c_dr(2),'rx','linewidth',2,'color','r','markersize',15);
% background white
set(ax4,'color','w'); set(gcf,'color','w');

%% Now add legend - first make surrounding box
xc = 1.017; dxc = 0.02; yc = 2.25; dyc = 0.65;
patch(ax4,[xc xc xc+dxc xc+dxc],[yc yc+dyc yc+dyc yc],'w','linewidth',1);
set(ax4,'clipping','off');
% determine size of legend entries boxes
dy = (ymax-ymin)/20; dx = (xmax-xmin)/20;
% Now label confidence regions
for z = 1:(n_gam+2)
    x_leg = xc + 0.001; y_leg = yc + 0.9*dyc - (z-1)*dyc/6;
    switch z
        case {1,2,3,4}
            patch(ax4,[ x_leg , x_leg , x_leg + dx , x_leg + dx],...
                [ y_leg - 1/2*dy , y_leg + 1/2*dy , y_leg + 1/2*dy , ...
                y_leg-1/2*dy ],color_in(n_gam-z+1,1:3),'linewidth',1.5);
    end
    % define text location
    x_legtext = x_leg + dx + dxc/20; y_legtext = y_leg - dyc/100;
    switch z
        case 4
            text(ax4,x_legtext,y_legtext,'${\rm 99\% \; region}$', ...
                'interpreter','latex','fontsize',fontsize_axis);
        case 3
            text(ax4,x_legtext,y_legtext,'${\rm 95\% \; region}$', ...
                'interpreter','latex','fontsize',fontsize_axis);
        case 2
            text(ax4,x_legtext,y_legtext,'${\rm 90\% \; region}$', ...
                'interpreter','latex','fontsize',fontsize_axis);
        case 1
            text(ax4,x_legtext,y_legtext,'${\rm 50\% \; region}$', ...
                'interpreter','latex','fontsize',fontsize_axis);
    end
    switch z
        case 5
            plot(ax4,x_leg+0.0013,y_leg+0.01,'rx','markersize',15, ...
                'linewidth',2);
            text(ax4,x_legtext,y_legtext+0.01,'${\rm least\;squares}$', ...
                'interpreter','latex','fontsize',fontsize_axis, ...
                'color','r');
        case 6
            line(ax4,[x_leg x_leg+dx],[y_leg+0.02 , y_leg+0.02], ...
                'linestyle',':','linewidth',3,'markersize',10, ...
                'color',unif_intervals);
            text(ax4,x_legtext,y_legtext+0.03,'${\rm percentiles}$', ...
                'interpreter','latex','fontsize',fontsize_axis, ...
                'color',unif_intervals);
    end
end
set(ax4,'color','w'); set(gcf,'color','w');

%%% end of script
