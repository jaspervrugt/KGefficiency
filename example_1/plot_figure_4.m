%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 
%% Vrugt, J.A. and de Oliveira, D.Y., 2022. Confidence intervals of the
%%  Kling-Gupta efficiency, Journal of Hydrology, 612, 
%%  10.1016/j.jhydrol.2022.127968
%% https://doi.org/10.1016/j.jhydrol.2022.127968
%%
%% Plot Figure 4 of paper ( = Fig. 3 as figures have been switched)
%% 
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%% Open figure
fig_name = 'Fig: Results of: (I) Least squares and (II) bootstrap';
figure('unit','inches','name',fig_name,'PaperOrientation','portrait', ...
    'position',[0.1 0.1 13 10.2]);

%% Define some default variables/settings
xmin = 0.97; xmax = 1.025; ymin = 1.30; ymax = 2.60;
xloc = 0.97:0.01:1.02;
yloc = 1.4:0.2:2.6;
xminortick = 0.97:0.002:1.025; 
xminortick = xminortick(~ismember(xminortick,xloc));
yminortick = 1.3:0.05:2.6; 
yminortick = yminortick(~ismember(yminortick,yloc));
text_perct = 1; % no percentiles printed
color_in = [ 0.3 0.3 0.3; 0.5 0.5 0.5 ; 0.7 0.7 0.7; 0.9 0.9 0.9]; 
unif_intervals = [16 64 207]/255;
linewdth_intervals = 0.5; linewdth_intervals2 = 2;
linewdth_type = '--';
fontsize_labels = 18;
fontsize_axis = 18;
fontsize_percentiles = 18;
fontsize_ctlabels = 15;

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Fig. 1A Analytic results: Confidence region (via F-distribution)
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax1 = axes('units','inches'); 
axpos = [ 1.5 4.65 4.5 4.5 ]; 
set(ax1,'position',axpos);
ellipse(ax1,semimajor_axisT, semiminor_axisT,pi+phiT,X0T,Y0T,[],[], ...
    color_in(1:n_gam,1:3)); hold on
%% Plot contours
[cc1,hh1] = contour(ax1,b(1,1:M),b(2,1:M),SSR,15,'linewidth',0.5);
clabel(cc1,hh1,'LabelSpacing',300,'Color','k','fontsize', ...
    fontsize_ctlabels); %,'FontWeight','bold');
hh1.LevelList = [50 52 55 60 70 80 100 125 150 200 250]; 
colormap(ax1,copper)
%% Now add univariate intervals - gamma % (95%)
dyp = 0.10;
% horizontal lines: start + end at right side
line(ax1,[xmin xmin + 0.03*(xmax-xmin)],[ls_95(2,1) ls_95(2,1)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax1,[xmin xmin + 0.03*(xmax-xmin)],[ls_95(2,2) ls_95(2,2)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax1,[xmax xmax - 0.03*(xmax-xmin)],[ls_95(2,1) ls_95(2,1)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax1,[xmax xmax - 0.03*(xmax-xmin)],[ls_95(2,2) ls_95(2,2)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
if text_perct == 1
    text(ax1,xmin+0.035*(xmax-xmin),ls_95(2,1)-6*0.0004, ...
        '${\rm 2.5\%}$','interpreter','latex','fontsize',...
        fontsize_percentiles,'HorizontalAlignment', 'left', ...
        'color',unif_intervals);
    text(ax1,xmax-0.035*(xmax-xmin),ls_95(2,2)-6*0.0004, ...
        '${\rm 97.5\%}$','interpreter','latex','fontsize',...
        fontsize_percentiles,'HorizontalAlignment', 'right', ...
        'color',unif_intervals);
end
% horizontal lines: middle
line(ax1,[ls_95(1,1) ls_95(1,2)],[ls_95(2,1) ls_95(2,1)],'linestyle', ...
    linewdth_type,'linewidth',linewdth_intervals,'color',unif_intervals);
line(ax1,[ls_95(1,1) ls_95(1,2)],[ls_95(2,2) ls_95(2,2)],'linestyle', ...
    linewdth_type,'linewidth',linewdth_intervals,'color',unif_intervals);
% vertical lines: start + end on top
line(ax1,[ls_95(1,1) ls_95(1,1)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax1,[ls_95(1,2) ls_95(1,2)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax1,[ls_95(1,1) ls_95(1,1)],[ymax ymax - 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax1,[ls_95(1,2) ls_95(1,2)],[ymax ymax - 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
if text_perct == 1
    hp = text(ax1,ls_95(1,1)+0.0002,ymin+0.035*(ymax-ymin), ...
        '${\rm 2.5\%}$','interpreter','latex','fontsize',...
        fontsize_percentiles,'HorizontalAlignment', 'left', ...
        'color',unif_intervals);
    set(hp,'rotation',90);
    hp = text(ax1,ls_95(1,2)+0.0002,ymax-0.035*(ymax-ymin), ...
        '${\rm 97.5\%}$','interpreter','latex','fontsize',...
        fontsize_percentiles,'HorizontalAlignment', 'left', ...
        'color',unif_intervals);
    set(hp,'rotation',270);
end
% vertical lines: middle 
line(ax1,[ls_95(1,1) ls_95(1,1)],[ls_95(2,1) ls_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax1,[ls_95(1,2) ls_95(1,2)],[ls_95(2,1) ls_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% optimum solution
line(ax1,[xmin c_ls(1)],[c_ls(2) c_ls(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
line(ax1,[c_ls(1) c_ls(1)],[ymin c_ls(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
axis(ax1,[xmin xmax ymin ymax]);
set(ax1,'xtick',xloc,'xticklabel',xloc); xtickformat(ax1,'%3.2f');
xtick = get(ax1,'xtick'); xticklabel = get(ax1,'xticklabel'); 
set(ax1,'xticklabel',[]);
% now plot manually - for all except 12
dy = ymin - 0.065*(ymax-ymin);
for rr = 1:numel(xtick)
    text(ax1,xtick(rr),dy,xticklabel(rr),'fontsize',fontsize_axis, ...
        'HorizontalAlignment', 'center');
end
set(ax1,'ytick',yloc,'yticklabel',yloc); ytickformat(ax1,'%3.2f');
% Now create minor ticks - y axis
ax1.XAxis.MinorTickValues = xminortick;
ax1.YAxis.MinorTickValues = yminortick;
% Add labels
xlabel(ax1,'$a,\;{\rm slope}$','interpreter',...
    'latex','fontsize',fontsize_labels+2,'Units','normalized','Position',...
    [0.5, -0.12, 0],'fontweight','normal');
ylabel(ax1,'$b,\;{\rm intercept}$','interpreter',...
    'latex','fontsize',fontsize_labels+2,'Units','normalized','Position',...
    [-0.19, 0.5, 0],'fontweight','normal');
% add figure label
text(ax1,xmin+0.016*(xmax-xmin),ymin+1.05*(ymax-ymin), ...
    '(A) Confidence region: Exact','fontsize',fontsize_labels);

% adjust figure
pos = get(ax1, 'Position');
offset = 0.1;
set(ax1, ...
    'Box'         , 'on'                            , ...
    'TickDir'     , 'out'                           , ...
    'XMinorTick'  , 'on'                            , ...
    'YMinorTick'  , 'on'                            , ...
    'TickLength'  , [.02 .02]                       , ...
    'LineWidth'   , 1.25                            , ...
    'FontSize'    , fontsize_axis                   , ...
    'Position'    , pos + [0, offset, 0, -offset]);
% set box property to off and remove background color
set(ax1,'box','off','color','none')
% create new, empty axes with box but without ticks
h2 = axes('Position',get(ax1,'Position'),'box','on','xtick',[],'ytick',[]);
% set original axes as active
linkaxes([ax1 h2]);
% define right and top line
line(ax1,[xmax xmax],[ymin ymax],'color','k','linewidth',1);
line(ax1,[xmin xmax],[ymax ymax],'color','k','linewidth',1);
axis(ax1,[xmin xmax ymin ymax]);
plot(ax1,c_ls(1),c_ls(2),'rx','linewidth',2,'color','r','markersize',15);
% background white
set(ax1,'color','w');

%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Fig. 1B Numerical results: Bootstrap method
%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
ax2 = axes('units','inches'); 
axpos = [ 6.55 4.65 4.5 4.5 ]; 
set(ax2,'position',axpos);
% Now loop all bootstrap samples per confidence level
b1 = KG(1:N,1); b2 = KG(1:N,2);
% 99% interval
plot(ax2,b1(kg_99id,1),b2(kg_99id,1),'ro','markerfacecolor', ...
    color_in(1,1:3),'color',color_in(1,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 95% interval
plot(ax2,b1(kg_95id,1),b2(kg_95id,1),'ro','markerfacecolor', ...
    color_in(2,1:3),'color',color_in(2,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 90% interval
plot(ax2,b1(kg_90id,1),b2(kg_90id,1),'ro','markerfacecolor', ...
    color_in(3,1:3),'color',color_in(3,1:3),'markersize',3, ...
    'linewidth',eps); hold on
% 50% interval
plot(ax2,b1(kg_50id,1),b2(kg_50id,1),'ro','markerfacecolor', ...
    color_in(4,1:3),'color',color_in(4,1:3),'markersize',3, ...
    'linewidth',eps); hold on
%% Plot contours
[cc2,hh2] = contour(ax2,b(1,1:M),b(2,1:M),KGE_cont,15,'linewidth',0.5);
clabel(cc2,hh2,'LabelSpacing',300,'Color','k','fontsize', ...
    fontsize_ctlabels); %,'FontWeight','bold');
hh2.LevelList = [0.998 0.995 0.99 0.985 0.98 0.975 0.97 ... 
    0.965 0.96 0.955 0.95]; colormap(ax2,flipud(copper));
% define axes
axis(ax2,[xmin xmax ymin ymax]);
set(ax2,'xtick',xloc,'xticklabel',xloc); 
set(ax2,'xticklabel',[]);
% now plot manually - for all except 12
dy = ymin - 0.065*(ymax-ymin);
for rr = 1:numel(xtick)
    text(ax2,xtick(rr),dy,xticklabel(rr),'fontsize', ...
        fontsize_axis,'HorizontalAlignment', 'center');
end
set(ax2,'ytick',yloc,'yticklabel',[]);
% Now create minor ticks - y axis
ax2.XAxis.MinorTickValues = xminortick; 
ax2.YAxis.MinorTickValues = yminortick;

% plot optimum solution
dyp = 0.10;
% horizontal lines: start + end at right side
line(ax2,[xmin xmin + 0.03*(xmax-xmin)],[kg_95(2,1) kg_95(2,1)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax2,[xmin xmin + 0.03*(xmax-xmin)],[kg_95(2,2) kg_95(2,2)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax2,[xmax xmax - 0.03*(xmax-xmin)],[kg_95(2,1) kg_95(2,1)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax2,[xmax xmax - 0.03*(xmax-xmin)],[kg_95(2,2) kg_95(2,2)], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
if text_perct == 1
    text(ax2,xmin+0.035*(xmax-xmin),kg_95(2,1)-6*0.0004, ...
        '${\rm 2.5\%}$','interpreter','latex','fontsize',...
        fontsize_percentiles,'HorizontalAlignment', 'left', ...
        'color',unif_intervals);
    text(ax2,xmin+0.035*(xmax-xmin),kg_95(2,2)-6*0.0004, ...
        '${\rm 97.5\%}$','interpreter','latex','fontsize',...
        fontsize_percentiles,'HorizontalAlignment', 'left', ...
        'color',unif_intervals);
end
% horizontal lines: middle
line(ax2,[kg_95(1,1) kg_95(1,2)],[kg_95(2,1) kg_95(2,1)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax2,[kg_95(1,1) kg_95(1,2)],[kg_95(2,2) kg_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% vertical lines: start + end at top
line(ax2,[kg_95(1,1) kg_95(1,1)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax2,[kg_95(1,2) kg_95(1,2)],[ymin ymin + 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax2,[kg_95(1,1) kg_95(1,1)],[ymax ymax - 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
line(ax2,[kg_95(1,2) kg_95(1,2)],[ymax ymax - 0.03*(ymax-ymin) ], ...
    'linestyle','-','linewidth',linewdth_intervals2,'color', ...
    unif_intervals);
% add text about percentiles
if text_perct == 1
    hp = text(ax2,kg_95(1,1)+0.0002,ymin+0.035*(ymax-ymin), ...
        '${\rm 2.5\%}$','interpreter','latex','fontsize',...
        fontsize_percentiles,'HorizontalAlignment', 'left', ...
        'color',unif_intervals);
    set(hp,'rotation',90);
    hp = text(ax2,kg_95(1,2)+0.0002,ymax-0.035*(ymax-ymin), ...
        '${\rm 97.5\%}$','interpreter','latex','fontsize',...
        fontsize_percentiles,'HorizontalAlignment', 'left', ...
        'color',unif_intervals);
    set(hp,'rotation',270);
end
% vertical lines: middle
line(ax2,[kg_95(1,1) kg_95(1,1)],[kg_95(2,1) kg_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
line(ax2,[kg_95(1,2) kg_95(1,2)],[kg_95(2,1) kg_95(2,2)], ...
    'linestyle',linewdth_type,'linewidth',linewdth_intervals, ...
    'color',unif_intervals);
% optimum solution - red dashed lines
line(ax2,[xmin c_kg(1)],[c_kg(2) c_kg(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
line(ax2,[c_kg(1) c_kg(1)],[ymin c_kg(2)],'linestyle','--', ...
    'linewidth',1,'color','r');
% Add labels
xlabel(ax2,'$a,\;{\rm slope}$','interpreter',...
    'latex','fontsize',fontsize_labels+2,'Units','normalized', ...
    'Position',[0.5, -0.12, 0],'fontweight','normal');
% add figure label
text(ax2,xmin+0.016*(xmax-xmin),ymin+1.05*(ymax-ymin), ...
    '(B) Bootstrap: KG Efficiency','fontsize',fontsize_labels);
% adjust figure
pos = get(ax2, 'Position');
offset = 0.1;
set(ax2, ...
    'Box'         , 'on'                            , ...
    'TickDir'     , 'out'                           , ...
    'XMinorTick'  , 'on'                            , ...
    'YMinorTick'  , 'on'                            , ...
    'TickLength'  , [.02 .02]                       , ...
    'LineWidth'   , 1.25                            , ...
    'FontSize'    , fontsize_axis                   , ...
    'Position'    , pos + [0, offset, 0, -offset]);
% set box property to off and remove background color
set(ax2,'box','off','color','none')
% create new, empty axes with box but without ticks
h2 = axes('Position',get(ax2,'Position'),'box','on','xtick',[],'ytick',[]);
% set original axes as active
linkaxes([ax2 h2]);
line(ax2,[xmax xmax],[ymin ymax],'color','k','linewidth',1);
line(ax2,[xmin xmax],[ymax ymax],'color','k','linewidth',1);
axis(ax2,[xmin xmax ymin ymax]);
%% Now add legend - first make surrounding box
xc = 1.014; dxc = 0.023; yc = 2; dyc = 0.65;
patch(ax2,[xc xc xc+dxc xc+dxc],[yc yc+dyc yc+dyc yc],'w','linewidth',1);
set(ax2,'clipping','off');
% determine size of legend entries boxes
dy = (ymax-ymin)/20; dx = (xmax-xmin)/20;
% Now label confidence regions
for z = 1:(n_gam+2)
    x_leg = xc + 0.001; y_leg = yc + 0.9*dyc - (z-1)*dyc/6;
    switch z
        case {1,2,3,4}
            patch(ax2,[ x_leg , x_leg , x_leg + dx , x_leg + dx], ...
                [ y_leg - 1/2*dy , y_leg + 1/2*dy , y_leg + 1/2*dy , ...
                y_leg-1/2*dy ],...
                color_in(n_gam-z+1,1:3),'linewidth',1.5);
    end
    % define text location
    x_legtext = x_leg + dx + dxc/20; y_legtext = y_leg - dyc/100;
    switch z
        case 4
            text(ax2,x_legtext,y_legtext,'${\rm 99\% \; region}$', ...
                'interpreter','latex','fontsize',fontsize_axis);
        case 3
            text(ax2,x_legtext,y_legtext,'${\rm 95\% \; region}$', ...
                'interpreter','latex','fontsize',fontsize_axis);
        case 2
            text(ax2,x_legtext,y_legtext,'${\rm 90\% \; region}$', ...
                'interpreter','latex','fontsize',fontsize_axis);
        case 1
            text(ax2,x_legtext,y_legtext,'${\rm 50\% \; region}$', ...
                'interpreter','latex','fontsize',fontsize_axis);
    end
    switch z
        case 5
            plot(ax2,x_leg+0.0013,y_leg+0.01,'rx','markersize',15, ...
                'linewidth',2);
            text(ax2,x_legtext,y_legtext+0.01,'${\rm KG\;efficiency}$', ...
                'interpreter','latex','fontsize',fontsize_axis, ...
                'color','r');
        case 6
            line(ax2,[x_leg x_leg+dx],[y_leg+0.02 , y_leg+0.02], ...
                'linestyle',':','linewidth',3,'markersize',10, ...
                'color',unif_intervals);
            text(ax2,x_legtext,y_legtext+0.03,'${\rm percentiles}$', ...
                'interpreter','latex','fontsize',fontsize_axis, ...
                'color',unif_intervals);
    end
end
plot(ax2,c_kg(1),c_kg(2),'rx','linewidth',2,'color','r','markersize',15);
% background white
set(ax2,'color','w'); set(gcf,'color','w');

%%% end of script